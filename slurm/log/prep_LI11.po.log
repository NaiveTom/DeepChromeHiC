************************************
************************************

    Welcome to use DeepChromeHiC

************************************
************************************

begin time >>> Sat Oct  2 02:41:55 2021

begin time >>> Sat Oct  2 02:41:55 2021

begin time >>> Sat Oct  2 02:41:55 2021

begin time >>> Sat Oct  2 02:41:55 2021

begin time >>> Sat Oct  2 02:41:55 2021



If it is the first time to use, please preprocess the data first.
Use the command: python3 DeepChromeHiC.py -p true -n [gene name]
For example: python3 DeepChromeHiC.py -p true -n AD2.po


=== Below is your input ===

args.preprocessing = true
args.name = LI11.po
===========================

LI11.po

-> make new folder: data/LI11.po/png_train/0
-> make new folder: data/LI11.po/png_train/1
-> make new folder: data/LI11.po/png_test/0
-> make new folder: data/LI11.po/png_test/1
-> make new folder: data/LI11.po/train_en/0
-> make new folder: data/LI11.po/train_en/1
-> make new folder: data/LI11.po/train_pr/0
-> make new folder: data/LI11.po/train_pr/1
-> make new folder: data/LI11.po/test_en/0
-> make new folder: data/LI11.po/test_en/1
-> make new folder: data/LI11.po/test_pr/0
-> make new folder: data/LI11.po/test_pr/1
-> processing png...

========================================
anchor1_pos.shape
(3444,)
========================================

========================================
anchor1_neg2.shape
(3444,)
========================================

========================================
anchor2_pos.shape
(3444,)
========================================

========================================
anchor2_neg2.shape
(3444,)
========================================

----------------------------------------
anchor1_pos

train_split_rate 0.9
test_split_rate 0.09999999999999998

len(train_set) 3099
len(test_set) 345
----------------------------------------

----------------------------------------
anchor1_neg2

train_split_rate 0.9
test_split_rate 0.09999999999999998

len(train_set) 3099
len(test_set) 345
----------------------------------------

----------------------------------------
anchor2_pos

train_split_rate 0.9
test_split_rate 0.09999999999999998

len(train_set) 3099
len(test_set) 345
----------------------------------------

----------------------------------------
anchor2_neg2

train_split_rate 0.9
test_split_rate 0.09999999999999998

len(train_set) 3099
len(test_set) 345
----------------------------------------

########################################
one-hot enconding
[ [A], [C], [G], [T], [N] ]
[[1. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1.]]
########################################


>>> Sat Oct  2 02:42:27 2021

The training set and labels are being stored in blocks, block number = 0 / 3
Merged block size (1000, 5, 20002)
PNG is being generated...

>>> Sat Oct  2 02:50:09 2021

The training set and labels are being stored in blocks, block number = 1 / 3
Merged block size (1000, 5, 20002)
PNG is being generated...

>>> Sat Oct  2 02:57:50 2021

The training set and labels are being stored in blocks, block number = 2 / 3
Merged block size (1000, 5, 20002)
PNG is being generated...

>>> Sat Oct  2 03:05:33 2021

The training set and labels are being stored in blocks, block number = 3 / 3
Merged block size (99, 5, 20002)
PNG is being generated...



>>> Sat Oct  2 03:06:18 2021

Writing test set and tags to png ...
Merged block size (345, 5, 20002)
PNG is being generated...

>>> Sat Oct  2 03:08:58 2021



-> png processed successfully!

-> processing npz...

Loading anchor1 ...
anchor1 finished ...

Loading anchor2 ...
anchor2 finished ...

train enconding ...
test enconding ...

writing data into .npz ...

-> npz processed successfully!











end time >>> Sat Oct  2 03:11:05 2021

end time >>> Sat Oct  2 03:11:05 2021

end time >>> Sat Oct  2 03:11:05 2021

end time >>> Sat Oct  2 03:11:05 2021

end time >>> Sat Oct  2 03:11:05 2021












time used = 1749.4320757389069


