************************************
************************************

    Welcome to use DeepChromeHiC

************************************
************************************

begin time >>> Sat Oct  2 03:06:29 2021

begin time >>> Sat Oct  2 03:06:29 2021

begin time >>> Sat Oct  2 03:06:29 2021

begin time >>> Sat Oct  2 03:06:29 2021

begin time >>> Sat Oct  2 03:06:29 2021



If it is the first time to use, please preprocess the data first.
Use the command: python3 DeepChromeHiC.py -p true -n [gene name]
For example: python3 DeepChromeHiC.py -p true -n AD2.po


=== Below is your input ===

args.preprocessing = true
args.name = ME.pp
===========================

ME.pp

-> make new folder: data/ME.pp/png_train/0
-> make new folder: data/ME.pp/png_train/1
-> make new folder: data/ME.pp/png_test/0
-> make new folder: data/ME.pp/png_test/1
-> make new folder: data/ME.pp/train_en/0
-> make new folder: data/ME.pp/train_en/1
-> make new folder: data/ME.pp/train_pr/0
-> make new folder: data/ME.pp/train_pr/1
-> make new folder: data/ME.pp/test_en/0
-> make new folder: data/ME.pp/test_en/1
-> make new folder: data/ME.pp/test_pr/0
-> make new folder: data/ME.pp/test_pr/1
-> processing png...

========================================
anchor1_pos.shape
(2145,)
========================================

========================================
anchor1_neg2.shape
(2145,)
========================================

========================================
anchor2_pos.shape
(2145,)
========================================

========================================
anchor2_neg2.shape
(2145,)
========================================

----------------------------------------
anchor1_pos

train_split_rate 0.9
test_split_rate 0.09999999999999998

len(train_set) 1930
len(test_set) 215
----------------------------------------

----------------------------------------
anchor1_neg2

train_split_rate 0.9
test_split_rate 0.09999999999999998

len(train_set) 1930
len(test_set) 215
----------------------------------------

----------------------------------------
anchor2_pos

train_split_rate 0.9
test_split_rate 0.09999999999999998

len(train_set) 1930
len(test_set) 215
----------------------------------------

----------------------------------------
anchor2_neg2

train_split_rate 0.9
test_split_rate 0.09999999999999998

len(train_set) 1930
len(test_set) 215
----------------------------------------

########################################
one-hot enconding
[ [A], [C], [G], [T], [N] ]
[[1. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1.]]
########################################


>>> Sat Oct  2 03:06:49 2021

The training set and labels are being stored in blocks, block number = 0 / 1
Merged block size (1000, 5, 20002)
PNG is being generated...

>>> Sat Oct  2 03:14:59 2021

The training set and labels are being stored in blocks, block number = 1 / 1
Merged block size (930, 5, 20002)
PNG is being generated...



>>> Sat Oct  2 03:22:34 2021

Writing test set and tags to png ...
Merged block size (215, 5, 20002)
PNG is being generated...

>>> Sat Oct  2 03:24:19 2021



-> png processed successfully!

-> processing npz...

Loading anchor1 ...
anchor1 finished ...

Loading anchor2 ...
anchor2 finished ...

train enconding ...
test enconding ...

writing data into .npz ...

-> npz processed successfully!











end time >>> Sat Oct  2 03:25:44 2021

end time >>> Sat Oct  2 03:25:44 2021

end time >>> Sat Oct  2 03:25:44 2021

end time >>> Sat Oct  2 03:25:44 2021

end time >>> Sat Oct  2 03:25:44 2021












time used = 1155.6501264572144


